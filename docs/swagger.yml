openapi: 3.0.3
info:
  title: Emprius app
  description: Emprius app endpoints
  version: 1.0.0
tags:
  - name: auth
    description: Oauth stuff for authentication
  - name: user
    description: Operations about own user and other users
  - name: tool
    description: Get single tool info
  - name: tools
    description: Search tools
  - name: bookings
    description: Accepted, pending requests for tool bookings
  - name: booking
    description: Specific booking operations
paths:
  /auth/login:
    summary: Login with email and password
    description: It should return JWT access and refresh token
    get:
      tags:
        - auth
      summary: ''
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
  /auth/register:
    summary: Register with a required invite
    description: It will recieve a full user model
    put:
      summary: ''
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - auth
  /auth/refresh:
    summary: Refresh access token
    get:
      summary: Use refresh token to get an updated access token
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - auth
  /user:
    summary: Own user related actions
    description: Like get, put etc..
    get:
      summary: Get auth user information
      description: Will return private info like available  EMPS and other stuff
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - user
    post:
      summary: Modify user profile
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - user
  /user/{userId}:
    summary: Get specific user information
    get:
      summary: Get user profile info by id
      description: ''
      operationId: ''
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      tags:
        - user
  /tool/{toolId}:
    summary: Get tool info
    get:
      summary: Get tool info by id
      description: ''
      operationId: ''
      parameters:
        - name: toolId
          in: path
          description: ID of the tool to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - tool
    post:
      summary: Modify own tool by Id
      description: ''
      operationId: ''
      parameters:
        - name: toolId
          in: path
          description: ID of the tool to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - tool
    delete:
      summary: Delete specific tool
      description: ''
      operationId: ''
      parameters:
        - name: toolId
          in: path
          description: ID of the tool to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - tool
  /tools:
    summary: List of tools operations
    get:
      summary: Get owned tools
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - tools
  /tools/category/{categoryId}:
    summary: Filter tools by categoryId
    get:
      summary: Get a list of tool summaries by categoryId
      description: ''
      operationId: ''
      parameters:
        - name: categoryId
          in: path
          description: ID for the category to search
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - tools
  /tools/geo/:
    summary: List of tools by geolocation
    get:
      summary: Get a list of tools by geolocated square area
      description: >-
        It get query parameters defining top left point and bottom right point
        to draw the square where to look for the tools
      operationId: ''
      parameters:
        - in: query
          name: topLat
          schema:
            type: integer
            format: int64
          description: Top left latitude
        - in: query
          name: topLon
          schema:
            type: integer
            format: int64
          description: Top left longitude
        - in: query
          name: botLat
          schema:
            type: integer
            format: int64
          description: Bottom right latitude
        - in: query
          name: botLon
          schema:
            type: integer
            format: int64
          description: Bottom right longitude
      responses:
        default:
          description: Default error sample response
      tags:
        - tools
  /tool:
    get:
      summary: Create a tool
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - tool
  /bookings/requests:
    summary: Get list of tools you own and somebody wants to rent
    get:
      summary: 'Get paginated list of tools you own and somebody wants to rent or somebody rented'
      description: 'It shows a booking summary'
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - bookings
  /bookings/petitions:
    summary: Get list of tools you want to rent
    get:
      summary: 'Get paginated list of tools you want to rent or you have rented'
      description: 'It shows a booking summary'
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - bookings
  /booking/{bookingId}:
    summary: Specific booking operation
    get:
      summary: Get specific booking detail by booking id
      description: ''
      operationId: ''
      parameters:
        - name: bookingId
          in: path
          description: ID for the booking to search
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - booking
    post:
      summary: Change state to returned if you are
        the owner of the tool
      description: >-
        It change if is returned, and the user/tool rating, depending if you are
        the owner of the tool
      operationId: ''
      parameters:
        - name: bookingId
          in: path
          description: ID for the booking to search
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - booking
  /booking/rate:
    summary: Rate a booking
    get:
      summary: Get list of booking ids to rate
      description: ''
      operationId: ''
      responses:
        default:
          description: Default error sample response
      tags:
        - booking
    post:
      summary: Rate a specific booking by booking id
      description: >-
        You could rate user and tool. If you are the owner just the other user
      operationId: ''
      parameters:
        - name: bookingId
          in: query
          description: ID for the booking to search
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Default error sample response
      tags:
        - booking

components:
  schemas:
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        emps:
          type: integer
          example: 200
        active:
          type: boolean
          description: User is active
          example: true
        rating:
          type: integer
          format: int32
          example: 5
        avatar:
          type: string
          description: url path
          example: "hhtps://emprius.app/imgs/blahblah.png"
        location:
          $ref: '#/components/schemas/location'
        activity:
          $ref: '#/components/schemas/activity'
    activity:
      type: "object"
      properties:
        property:
          type: "string"
          example: "todo"
    location:
      type: object
      properties:
        lat:
          type: string
          example: "41.695384"
        lng:
          type: string
          example: "2.492793"
